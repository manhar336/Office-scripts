import requests
import sys
from xml.sax.saxutils import escape

def main():

    # defining parameters for the API
    PROD_HOST = "https://idbroker.webex.com"
    BTS_HOST = "https://idbrokerbts.webex.com"
    API_HEADER = "/idb/token/v2/actions/GetBearerToken/invoke"

    BTS_ENVIRONMENT = "BTS"
    PROD_ENVIRONMENT = "PROD"
    HEADERS = {'Content-Type': 'application/json'}

    #defining message status responses
    MESSAGE_STATUS_200 = 'Status 200 OK. The request was processed correctly.'
    MESSAGE_STATUS_400 = 'Status 400 Bad Request. The request was incomplete or malformed.'
    MESSAGE_STATUS_401 = 'Status 401 Unauthorized. Invalid ID or password.'
    MESSAGE_STATUS_500 = 'Status 500 Internal Server Error. The request has unexpected exceptions.'
    MESSEAGE_STATUS_INVALID = 'Input is Invalid.'

    try:
        # read commandline arguments
        fullCmdArguments = sys.argv
        argumentList = fullCmdArguments[1:]

        #getting the command line arguments in variables
        environment = argumentList[0]
        name = argumentList[1]
        password = argumentList[2]

        #checking the environment is BTS/PROD
        if(environment == BTS_ENVIRONMENT):
            API_ENDPOINT = BTS_HOST + API_HEADER
        elif (environment == PROD_ENVIRONMENT):
            API_ENDPOINT = PROD_HOST + API_HEADER
        else:
            print("Please verify the command line arguments.")

        # data to be sent to the API
        data = '{"name": "' + name + '","password": "' + password + '"}'

    except:
        print("Please correct the input parameters")
        sys.exit()

    try:
        # sending post request and saving response as response object
        response = requests.request("POST", headers = HEADERS, url = API_ENDPOINT, data = data)
        statusCode = int(response.status_code)

        if(statusCode == 200):
            print(MESSAGE_STATUS_200)
            replaceEscapeCharacters(password)
        elif(statusCode == 400):
            print(MESSAGE_STATUS_400)
        elif (statusCode == 401):
            print(MESSAGE_STATUS_401)
        elif (statusCode == 500):
            print(MESSAGE_STATUS_500)
        else:
            print("Status is " + statusCode)
            print(MESSEAGE_STATUS_INVALID)
    except:
        print("API call Failed")
        sys.exit()

#function to replace escape characters
def replaceEscapeCharacters(password):
    try:
        updatedPassword = escape(password)
        if(len(updatedPassword) != len(password)):
            print("Updated password is : " + updatedPassword)
        else:
            print("No password update is required")

    except:
        print("Password update failed")
        sys.exit()

if __name__ == '__main__':
    main()
